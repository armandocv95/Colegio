// <auto-generated />
using System;
using ColegioApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ColegioApp.Data.Migrations
{
    [DbContext(typeof(ColegioCtx))]
    [Migration("20220228054553_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("ColegioApp.Data.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("ColegioApp.Data.AlumnoGrado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Seccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("alumnoId")
                        .HasColumnType("integer");

                    b.Property<int>("gradoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("alumnoId");

                    b.HasIndex("gradoId");

                    b.ToTable("AlumnoGrados");
                });

            modelBuilder.Entity("ColegioApp.Data.Grado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("profesorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("profesorId");

                    b.ToTable("Grados");
                });

            modelBuilder.Entity("ColegioApp.Data.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("ColegioApp.Data.AlumnoGrado", b =>
                {
                    b.HasOne("ColegioApp.Data.Alumno", "alumno")
                        .WithMany("alumnoGrados")
                        .HasForeignKey("alumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColegioApp.Data.Grado", "grado")
                        .WithMany("alumnoGrados")
                        .HasForeignKey("gradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("alumno");

                    b.Navigation("grado");
                });

            modelBuilder.Entity("ColegioApp.Data.Grado", b =>
                {
                    b.HasOne("ColegioApp.Data.Profesor", "profesor")
                        .WithMany("grados")
                        .HasForeignKey("profesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profesor");
                });

            modelBuilder.Entity("ColegioApp.Data.Alumno", b =>
                {
                    b.Navigation("alumnoGrados");
                });

            modelBuilder.Entity("ColegioApp.Data.Grado", b =>
                {
                    b.Navigation("alumnoGrados");
                });

            modelBuilder.Entity("ColegioApp.Data.Profesor", b =>
                {
                    b.Navigation("grados");
                });
#pragma warning restore 612, 618
        }
    }
}
